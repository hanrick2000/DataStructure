public class GeoHash {
    /**
     * @param geohash a base32 string
     * @return latitude and longitude a location coordinate pair
     */
    public double[] decode(String geohash) {
        // Write your code here
        String _base32 = "0123456789bcdefghjkmnpqrstuvwxyz";
        int[] mask = {16, 8, 4, 2, 1};
        double[] lon = {-180, 180};
        double[] lat = {-90, 90};
        boolean is_even = true;

        for (int i = 0; i < geohash.length(); ++i) {
            int val = _base32.indexOf(geohash.charAt(i));
            for (int j = 0; j < 5; ++j) {
                if (is_even) {
                    refine_interval(lon, val, mask[j]);
                } else {
                    refine_interval(lat, val, mask[j]);
                }
                is_even = ! is_even;
            }
        }
        double[] location = {(lat[0] + lat[1]) / 2.0, (lon[0] + lon[1]) / 2.0};
        return location;
    }

    public void refine_interval(double[] interval, int val, int mask) {
        if ((val & mask) > 0) {
            interval[0] = (interval[0] + interval[1]) / 2.0;
        } else {
            interval[1] = (interval[0] + interval[1]) / 2.0;
        }
        System.out.println("0: " + interval[0] + ", 1: " + interval[1]);
    }
}

/**
E.g 1:
  Input
		"wx4g0s"
  
  Your stdout
		0: 0.0, 1: 180.0
		0: 0.0, 1: 90.0
		0: 90.0, 1: 180.0
		0: 0.0, 1: 45.0
		0: 90.0, 1: 135.0
		0: 22.5, 1: 45.0
		0: 112.5, 1: 135.0
		0: 33.75, 1: 45.0
		0: 112.5, 1: 123.75
		0: 39.375, 1: 45.0
		0: 112.5, 1: 118.125
		0: 39.375, 1: 42.1875
		0: 115.3125, 1: 118.125
		0: 39.375, 1: 40.78125
		0: 115.3125, 1: 116.71875
		0: 39.375, 1: 40.078125
		0: 116.015625, 1: 116.71875
		0: 39.7265625, 1: 40.078125
		0: 116.3671875, 1: 116.71875
		0: 39.90234375, 1: 40.078125
		0: 116.3671875, 1: 116.54296875
		0: 39.90234375, 1: 39.990234375
		0: 116.3671875, 1: 116.455078125
		0: 39.90234375, 1: 39.9462890625
		0: 116.3671875, 1: 116.4111328125
		0: 39.92431640625, 1: 39.9462890625
		0: 116.38916015625, 1: 116.4111328125
		0: 39.92431640625, 1: 39.935302734375
		0: 116.38916015625, 1: 116.400146484375
		0: 39.92431640625, 1: 39.9298095703125
  
  Output
		39.92706299, 116.39465332

  Expected
		39.92706299, 116.39465332

E.g 2:
  Input
		"pbpbpbpbpbpb"

  Your stdout
		0: 0.0, 1: 180.0
		0: -90.0, 1: 0.0
		0: 90.0, 1: 180.0
		0: -90.0, 1: -45.0
		0: 135.0, 1: 180.0
		0: -90.0, 1: -67.5
		0: 157.5, 1: 180.0
		0: -90.0, 1: -78.75
		0: 168.75, 1: 180.0
		0: -90.0, 1: -84.375
		0: 174.375, 1: 180.0
		0: -90.0, 1: -87.1875
		0: 177.1875, 1: 180.0
		0: -90.0, 1: -88.59375
		0: 178.59375, 1: 180.0
		0: -90.0, 1: -89.296875
		0: 179.296875, 1: 180.0
		0: -90.0, 1: -89.6484375
		0: 179.6484375, 1: 180.0
		0: -90.0, 1: -89.82421875
		0: 179.82421875, 1: 180.0
		0: -90.0, 1: -89.912109375
		0: 179.912109375, 1: 180.0
		0: -90.0, 1: -89.9560546875
		0: 179.9560546875, 1: 180.0
		0: -90.0, 1: -89.97802734375
		0: 179.97802734375, 1: 180.0
		0: -90.0, 1: -89.989013671875
		0: 179.989013671875, 1: 180.0
		0: -90.0, 1: -89.9945068359375
		0: 179.9945068359375, 1: 180.0
		0: -90.0, 1: -89.99725341796875
		0: 179.99725341796875, 1: 180.0
		0: -90.0, 1: -89.99862670898438
		0: 179.99862670898438, 1: 180.0
		0: -90.0, 1: -89.99931335449219
		0: 179.9993133544922, 1: 180.0
		0: -90.0, 1: -89.9996566772461
		0: 179.9996566772461, 1: 180.0
		0: -90.0, 1: -89.99982833862305 ...
  
  Output
		-89.99999992, 179.99999983

  Expected
		-90, 180
		Sorry, LintCode do not provide current language standard answer for this problem.
*/